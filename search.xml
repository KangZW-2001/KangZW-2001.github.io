<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MatLab-1</title>
    <url>/2020/12/26/MatLab-1/</url>
    <content><![CDATA[<h1 id="Matlab介绍"><a href="#Matlab介绍" class="headerlink" title="Matlab介绍"></a>Matlab介绍</h1><h3 id="何为Matlab"><a href="#何为Matlab" class="headerlink" title="何为Matlab"></a>何为Matlab</h3><p>Matlab是由美国MathWorks公司开发的一种编程语言，其最初是一个矩阵的编程语言，使线性代数的运算变得简单。现多用于算法开发、数据可视化、数据分析等多个场景。主要包括Matlab和Simulink两部分。Matlab拥有众多的内置命令和数学函数。</p>
<a id="more"></a>

<h3 id="Matlab有什么优势特点"><a href="#Matlab有什么优势特点" class="headerlink" title="Matlab有什么优势特点"></a>Matlab有什么优势特点</h3><ol>
<li>高效的数值计算和符号计算功能，能使用户从繁杂的数学运算分析中解脱出来。</li>
<li>广阔的线性代数、统计、傅里叶变换、筛选等数学函数库。</li>
<li>具有完备的图形处理功能，实现计算结果和编程的可视化。</li>
<li>友好的用户界面及接近数学表达式的自然化语言，使学者易于学习和掌握。</li>
<li>功能丰富的应用工具箱(如信号处理工具箱、通信工具箱等) ，为用户提供了大量方便实用的处理工具。</li>
<li>MATLAB的编程接口给开发工具，提高代码质量和可维护性和性能的最大化。</li>
<li>它提供了基于MATLAB算法集成了C、Java、NET、和Excel等与外部应用程序和语言功能。</li>
</ol>
<h3 id="Matlab的用途"><a href="#Matlab的用途" class="headerlink" title="Matlab的用途"></a>Matlab的用途</h3><p>Matlab被广泛用来计算工具在科学和工程涵盖铃语物理、化学、数学和工程流。它在一定范围内的应用，包括：</p>
<ul>
<li>信号处理和通信</li>
<li>图像和视频处理</li>
<li>控制系统</li>
<li>测试和测量</li>
<li>计算金融</li>
<li>计算生物学</li>
</ul>
<h1 id="Matlab安装"><a href="#Matlab安装" class="headerlink" title="Matlab安装"></a>Matlab安装</h1><p><a href="https://cn.mathworks.com/downloads/web_downloads">Matlab官方下载地址</a></p>
<p>我们把Matlab主要的工作窗口称为桌面，启动之后，默认布局如下：</p>
<p><img src="/2020/12/26/MatLab-1/matlab.PNG" alt="matlab默认工作窗口"></p>
<p>Matlab桌面包含的面板如下：</p>
<ul>
<li>当前文件夹：此面板允许访问项目文件夹和文件</li>
<li>命令窗口：这是主要区域，用户在命令行中输入命令，命令提示符(&gt;&gt;)。</li>
<li>工作区：工作区显示所有创建的变量和/或从文件导入。</li>
<li>命令历史记录：此面板显示或重新运行，在命令行中输入的命令。（可以在命令窗口中按<strong>箭头上键</strong>调出）</li>
</ul>
]]></content>
      <categories>
        <category>Matlab</category>
      </categories>
      <tags>
        <tag>Matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab-2</title>
    <url>/2020/12/26/Matlab-2/</url>
    <content><![CDATA[<h1 id="Matlab基本语法"><a href="#Matlab基本语法" class="headerlink" title="Matlab基本语法"></a>Matlab基本语法</h1><blockquote>
<p>在Matlab环境下进行的操作就像是使用一个超级复杂的计算器。</p>
<p>Matlab本身是一种解释型的环境，也就是说，只要你给Matlab一个命令，它就会马上开始执行。而不同于C++和Java一样会先进行编译再执行。</p>
</blockquote>
<hr>
<h3 id="一些简单的例子"><a href="#一些简单的例子" class="headerlink" title="一些简单的例子"></a>一些简单的例子</h3><p>在”&gt;&gt;”命令提示符下键入一个有效的表达，例如：</p>
<p><code> 5 + 5</code> 然后按Enter键，当点击 <strong>执行</strong>按钮，或者按<strong>Ctrl + E</strong> ，Matlab将返回它执行的结果：<code>ans = 10</code>。</p>
<a id="more"></a>

<p><code>3 ^ 2</code> 会得到结果：<code>ans = 9</code>。</p>
<p><code>sin(pi/2)</code> 会得到结果：<code>ans = 1</code>。</p>
<p><code>7/0</code> 会得到结果：<code>ans = Inf</code>（表示该结果是无穷大）</p>
<p><code>732 * 20.3</code> 会得到结果 <code>ans = 1.4860e+04</code>（科学计数法）</p>
<hr>
<h3 id="Matlab常用的运算符和特殊字符"><a href="#Matlab常用的运算符和特殊字符" class="headerlink" title="Matlab常用的运算符和特殊字符"></a>Matlab常用的运算符和特殊字符</h3><p>Matlab提供了一些特殊的数学符号的表达，像<strong>圆周率(pi)、无穷(Inf)、复数(i或j代表$\sqrt{-1}$)、不是一个数字(Nan)等</strong></p>
<p>具体参照下表：</p>
<table>
<thead>
<tr>
<th align="center">运算符</th>
<th align="center">目的</th>
</tr>
</thead>
<tbody><tr>
<td align="center">+</td>
<td align="center">加；加法运算符</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">减；减法运算符</td>
</tr>
<tr>
<td align="center">*</td>
<td align="center"><strong>标量和矩阵乘法运算符</strong></td>
</tr>
<tr>
<td align="center">.*</td>
<td align="center"><strong>数组乘法运算符</strong></td>
</tr>
<tr>
<td align="center">^</td>
<td align="center"><strong>标量和矩阵求幂运算符</strong></td>
</tr>
<tr>
<td align="center">.^</td>
<td align="center"><strong>数组求幂运算符</strong></td>
</tr>
<tr>
<td align="center">\</td>
<td align="center"><strong>矩阵左除</strong></td>
</tr>
<tr>
<td align="center">.\</td>
<td align="center"><strong>阵列左除</strong></td>
</tr>
<tr>
<td align="center">/</td>
<td align="center"><strong>矩阵右除</strong></td>
</tr>
<tr>
<td align="center">./</td>
<td align="center"><strong>阵列右除</strong></td>
</tr>
<tr>
<td align="center">:</td>
<td align="center">向量生成；子阵提取</td>
</tr>
<tr>
<td align="center">()</td>
<td align="center">下标运算；参数定义</td>
</tr>
<tr>
<td align="center">[]</td>
<td align="center">矩阵生成</td>
</tr>
<tr>
<td align="center">.</td>
<td align="center">点乘运算，一般与其他符号配合使用</td>
</tr>
<tr>
<td align="center">…</td>
<td align="center">续行标志；行连续运算符</td>
</tr>
<tr>
<td align="center">,</td>
<td align="center">分行符</td>
</tr>
<tr>
<td align="center">;</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">%</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">_</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">._</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">=</td>
<td align="center"></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Matlab</category>
      </categories>
      <tags>
        <tag>Matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab-3</title>
    <url>/2020/12/28/Matlab-3/</url>
    <content><![CDATA[<h1 id="Matlab变量"><a href="#Matlab变量" class="headerlink" title="Matlab变量"></a>Matlab变量</h1><blockquote>
<p>每个Matlab变量可以是数组或者矩阵</p>
</blockquote>
<p>简单的使用<code>=</code>来指定变量，例如 <code>x=3</code> 就是创建了一个名为x的 <strong>1-1</strong> 的矩阵，并且将 3 存储在其中。</p>
<p>或者例如 <code>x = sqrt(16)</code> 则是将 4 存储在其中。</p>
<a id="more"></a>

<h3 id="Matlab注意事项"><a href="#Matlab注意事项" class="headerlink" title="Matlab注意事项"></a>Matlab注意事项</h3><blockquote>
<ol>
<li>使用变量之前，必须进行赋值</li>
<li>系统收到一个变量之后，这个变量可以被引用。</li>
<li>当表达式返回一个结果，不分配给任何变量，系统就会分配一个名为ans的变量，以后可以继续使用。</li>
</ol>
</blockquote>
<h3 id="Matlab可以给多个变量直接赋值"><a href="#Matlab可以给多个变量直接赋值" class="headerlink" title="Matlab可以给多个变量直接赋值"></a>Matlab可以给多个变量直接赋值</h3><p>多个任务可以在同一行，例如</p>
<p><code>a = 2; b = 7; c = a * b</code></p>
<p>Matlab将执行上面的语句，并返回以下结果：</p>
<blockquote>
<p>c = </p>
<p>​        14</p>
</blockquote>
<h3 id="Matlab如何显示已经使用的变量名？"><a href="#Matlab如何显示已经使用的变量名？" class="headerlink" title="Matlab如何显示已经使用的变量名？"></a>Matlab如何显示已经使用的变量名？</h3><p>使用 <code>who</code> 命令可以显示所有已经使用的变量名。</p>
<p>也可以使用 <code>whos</code> 命令来显示更多的和变量相关的信息：</p>
<ol>
<li>Name（变量名）</li>
<li>Size （变量的大小，行数、列数等）</li>
<li>Bytes</li>
<li>Class</li>
<li>Attributes</li>
</ol>
<p>使用 <code>clear</code> 命令删除所有的变量，或者 <code>clear var</code> 来删除指定的变量。</p>
<h3 id="长任务"><a href="#长任务" class="headerlink" title="长任务"></a>长任务</h3><p>可以通过 <code>...</code> 来将命令延伸到下一行。</p>
<h3 id="Matlab格式命令"><a href="#Matlab格式命令" class="headerlink" title="Matlab格式命令"></a>Matlab格式命令</h3><p>默认情况下，Matlab显示四个小数位值。也就是所谓的 <strong>short format</strong> ,如果想要更精确的话，需要使用format相关命令，例如，使用 <code>format long</code> 命令格式来显示小数点后16位。例如：</p>
<p><img src="/2020/12/28/Matlab-3/format.PNG"></p>
<p>也可以使用 <code>format bank</code> 来设置小数后两位的格式。</p>
<p>同样可以使用如下命令来表示指数形式（科学计数法）的位数：</p>
<blockquote>
<ul>
<li>format short e：表示指数形式显示小数后四位</li>
<li>format long e：表示指数形式显示小数后16位</li>
<li>format rat：可以给出最接近的有理表达式（<strong>分式形式</strong>）</li>
</ul>
</blockquote>
<h3 id="Matlab创建向量"><a href="#Matlab创建向量" class="headerlink" title="Matlab创建向量"></a>Matlab创建向量</h3><blockquote>
<p>向量是一维数组中的数字，Matlab允许创建两种类型的矢量：</p>
<ul>
<li>行向量</li>
<li>列向量</li>
</ul>
</blockquote>
<h4 id="1-创建行向量"><a href="#1-创建行向量" class="headerlink" title="1. 创建行向量"></a>1. 创建行向量</h4><p><code>r = [1 2 3 4 5]</code> 或者 <code>r = [1,2,3,4,5]</code> 都能得到一个 <strong>1-5</strong> 的行向量。</p>
<h4 id="2-创建列向量"><a href="#2-创建列向量" class="headerlink" title="2. 创建列向量"></a>2. 创建列向量</h4><p><code>r = [1; 2; 3; 4; 5]</code> 可以创建一个 <strong>5-1</strong> 的列向量。</p>
<h4 id="3-创建矩阵"><a href="#3-创建矩阵" class="headerlink" title="3. 创建矩阵"></a>3. 创建矩阵</h4><p><code>r = [1 2 3; 4 5 6; 7 8 9]</code> 会创建一个 <strong>3-3</strong> 的矩阵。其中使用空格或者逗号来区分列，使用分号来区分行。</p>
]]></content>
      <categories>
        <category>Matlab</category>
      </categories>
      <tags>
        <tag>Matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>图像处理-1</title>
    <url>/2020/12/26/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86-1/</url>
    <content><![CDATA[<h1 id="第一章-图像处理技术基础"><a href="#第一章-图像处理技术基础" class="headerlink" title="第一章 图像处理技术基础"></a>第一章 图像处理技术基础</h1><h3 id="数字图像的基本概念"><a href="#数字图像的基本概念" class="headerlink" title="数字图像的基本概念"></a>数字图像的基本概念</h3><blockquote>
<p>人类约有75%的信息是通过视觉获取的，数字图像处理是用计算机处理所获取的视觉信息的技术。</p>
</blockquote>
<ol>
<li><strong>图像的颜色</strong> ：色度学理论认为，任何颜色都可以由 <em>红、绿、蓝</em> 三种基本颜色混合而成。</li>
</ol>
<p>​                        即 <code>f(x,y,z) = &#123;fred(x,y,z),fgreen(x,y,z),fblue(x,y,z),&#125;</code></p>
<a id="more"></a>

<ol start="2">
<li><p><strong>图形与图像的区别</strong> ：首先，图形和图像在存储结构和表示方式上有根本的区别。</p>
<p><strong>图形</strong> ：由指令集合组成，指令描述了位置、形状、颜色等基础信息。当需要显示时，会根据指令在屏幕上渲染出对应的形状和颜色。</p>
<p><strong>图像</strong> ：图像本质上就是一个大矩阵。位置按照规则方式排列，坐标值是隐含的。更加直观、易懂、信息量大。</p>
</li>
</ol>
<blockquote>
<p>在我看来。图形就是更加规则，人为给定一些指令，例如直线、三角形、圆形等。再赋予它们各种各样的属性。归根结底是一个形状。图像更像是原本就存在，不是人为创造的，例如照相机拍出来的图像等。</p>
</blockquote>
<ol start="3">
<li><p><strong>数字图像的表示</strong></p>
<p>数字图像采用矩阵来表示，其中矩阵的每一个值可能代表一个索引值，或者直接就是颜色值。<strong>图像处理其实也就是对矩阵中的各种值进行处理</strong>。</p>
</li>
<li><p><strong>图像数字化的精度</strong></p>
<p>图像数字化的精度体现在两个方面：</p>
<p><strong>图像空间分辨率</strong> ：指的是图像数字化的空间精细程度（分辨率，像素的个数）。</p>
<p><strong>灰度级分辨率</strong> ：又名颜色深度，就是用几位来表示颜色。位数越多，颜色深度越深，能够识别的颜色越多，数字化越精细。</p>
<p>不同空间分辨率效果如下：<br><img src="/2020/12/26/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86-1/KongJian.png"></p>
<p>不同灰度级分辨率效果如下：<br><img src="/2020/12/26/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86-1/HuiDuJi.png"></p>
</li>
<li><p><strong>数字图像处理系统</strong></p>
<p><img src="/2020/12/26/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86-1/XiTong.png"></p>
<p>其中，<em>图像存储系统</em> 部分的研究主要是图像的压缩，<em>图像输出系统</em> 有打印机等机器，<em>图像处理和分析系统</em> 主要是使用计算机对图像进行相应的处理。</p>
</li>
<li><p><strong>数字图像处理的目的</strong></p>
<ul>
<li><p>提高图像的视感质量，达到赏心悦目的目的</p>
<p>对图像进行去噪处理，改变图像的亮度、颜色，增强或抑制图像中的某些成份、几何变换等。从而改善图像的质量。</p>
</li>
<li><p>提取图像中的某些特征，以便于分析</p>
<p>经常用作模式识别、计算机视觉的预处理等。这些特征包含很多方面，例如频域特性、灰度/颜色特性等。</p>
</li>
<li><p>图像识别</p>
<p>在分析的基础上，进行内容识别。例如：汽车牌照识别、人脸识别等。</p>
</li>
<li><p>对图像数据压缩，便于存储和传输。</p>
<p>提高存储量，提高网络的速度。</p>
</li>
</ul>
</li>
</ol>
<hr>
<h3 id="数字图像处理技术简介"><a href="#数字图像处理技术简介" class="headerlink" title="数字图像处理技术简介"></a>数字图像处理技术简介</h3><blockquote>
<p>​    图像处理技术是交叉边缘学科：是计算机、传感器、信息技术、人工智能、模式识别等的交叉学科和技术。</p>
<p>​    利用计算机对图像进行<strong>去除噪声、增强、复原、分割、提取特征</strong>等的理论、方法和技术称为数字图像处理。</p>
</blockquote>
<ol>
<li><p><strong>一般的图像处理过程</strong></p>
<p><img src="/2020/12/26/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86-1/%E4%B8%80%E8%88%AC%E7%9A%84%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E8%BF%87%E7%A8%8B.png"></p>
</li>
<li><p><strong>数字图像处理技术</strong></p>
<ul>
<li><p>图像获取、表示和表现</p>
<p>这一过程包括摄取图像、光电转换及数字化等几个步骤。主要是将模拟信号图像转换为数字形式，以及显示和表现出来。（本课程不讨论这部分）</p>
</li>
<li><p>图像复原</p>
<blockquote>
<p>当造成图像退化（图像品质下降）的原因已知时，复原技术可以对图像进行矫正。</p>
</blockquote>
<p>关键时对于每一种退化都有一个模型。根据什么<strong>原因</strong>造成的退化和<strong>模型</strong>以及<strong>数据</strong>反向去弥补来消除退化的影响，从而产生一个<strong>等价于理想成像系统</strong>所获得的图像。例如：<br><img src="/2020/12/26/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86-1/%E5%9B%BE%E5%83%8F%E5%A4%8D%E5%8E%9F.png"></p>
</li>
<li><p>图像增强</p>
<p>改善图像质量，不一定是针对退化，而是对感兴趣的部分进行加强。</p>
</li>
<li><p>图像分割</p>
<p>为了达到识别和理解的目的，按照一定规则将图像分割成区域（物体）。例如将汽车牌照单独分割出来。</p>
<blockquote>
<p>人类的视觉系统是很高级的视觉系统，我们只需要轻轻一想就可以将复杂场景中的对象分开（例如将街道上的车、行人、垃圾桶分开）。但是对于计算机来说却是一个难题。</p>
<p>将各种方法融合，提高处理的可靠性和有效性是研究热点。</p>
<p>目前，汽车牌照识别和人脸识别都已经应用到生活领域。在医学上还有待提高。</p>
</blockquote>
</li>
<li><p>图像分析</p>
<p>如医学图像处理，不仅要检测出物体（如肿瘤）的存在，而且还要检测出物体的大小。</p>
</li>
<li><p>图像重建</p>
<blockquote>
<p>图像增强、图像复原的输入是图像，输出是处理过后的图像。</p>
<p>图像重建的输入是数据，输出是图像。</p>
</blockquote>
<p>最典型的例子就是CT，扫描人体得到数据，然后根据数据构造出能反映人体状况的图像。</p>
</li>
<li><p>图像压缩编码</p>
<p>图像的数据是庞大的，一定要经过压缩。压缩过后的图像可以减少数据存储量、降低数据率以减少传输带宽、压缩信息量便于特征提取。</p>
</li>
</ul>
</li>
<li><p><strong>数字图像处理的特点</strong></p>
<ul>
<li>处理精度高，再现性好</li>
<li>处理方法的多样性</li>
<li>数据量庞大</li>
<li>处理费时</li>
<li>图像处理技术综合性较强</li>
</ul>
</li>
<li><p><strong>数字图像处理流程</strong></p>
<blockquote>
<p>流程分为三个阶段</p>
<p>​    <strong>图像处理阶段</strong></p>
<p>​    <strong>图像分析阶段</strong></p>
<p>​    <strong>图像理解阶段</strong></p>
<p>三个阶段 抽象程度依次增高、数据量依次减小、语义层级依次上升。操作的对象分别为：像素、目标和符号。</p>
</blockquote>
<p>特点如下图所示：</p>
<p><img src="/2020/12/26/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86-1/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.png"></p>
<ul>
<li><p>图像处理阶段</p>
<p>在<strong>像素级</strong>上进行调整处理。具体可以包括：几何校正、灰度变换处理、图像平滑处理和图像锐化处理等。</p>
</li>
<li><p>图像分析阶段</p>
<p>对感兴趣的<strong>目标</strong>进行检测、分割、测量以及特征提取等。分析出来的结果是能为用户提供目标的特点和性质的数据。</p>
</li>
<li><p>图像理解阶段</p>
<p>对图像里个目标的性质和它们之间的联系之间的研究，尽力模仿人类的思维。包括：抽象描述对象、了解图像内容、解释客观场景和指导规划行为等。</p>
</li>
</ul>
</li>
<li><p><strong>图像处理中常用技术</strong></p>
<p><strong>点处理</strong>：灰度变换</p>
<p><strong>域处理</strong>：主要有卷积、中值滤波和边缘检测等。</p>
</li>
</ol>
<hr>
<h3 id="数字图像处理技术的应用"><a href="#数字图像处理技术的应用" class="headerlink" title="数字图像处理技术的应用"></a>数字图像处理技术的应用</h3><p>主要有以下几个方面：</p>
<ul>
<li>遥感航天中的应用</li>
<li>生物医学中的应用</li>
<li>工业应用</li>
<li>军事公安领域中的应用</li>
<li>其他应用</li>
</ul>
<hr>
<h3 id="图像的存储格式"><a href="#图像的存储格式" class="headerlink" title="图像的存储格式"></a>图像的存储格式</h3><blockquote>
<p>按照颜色深度分类，常用的图像分为：<br>    <strong>黑白图像</strong></p>
<p>​    <strong>8位索引图像</strong>：（包括8位灰度图像和伪彩色图像）</p>
<p>​    <strong>24位真彩色图像</strong></p>
</blockquote>
<ol>
<li><p><strong>单色图像</strong></p>
<p>矩阵中的每一个像素值非黑即白（非0即1），因为只有一个二进制位，所以只能表达两种颜色（黑和白）。通过黑和白来表示图像。</p>
</li>
<li><p><strong>8位索引图像</strong></p>
<p>矩阵中的数值通过8个二进制位表示，即范围是0到255共256个数值。这些数值只是一个索引号，通过索引号去颜色表（调色板）中寻找到对应的颜色值（R、G、B值）</p>
<blockquote>
<p>8位索引图像包括：8位灰度索引图像、8位伪彩色索引图像。</p>
<p>​    8位<strong>灰度</strong>索引图象的颜色表中的每一个<strong>R、G、B分量值都相等</strong>。就是将从黑到白细分为256层，整个图像呈现灰色。而且矩阵中的索引值就可以体现出灰度的等级。</p>
<p>​    8位<strong>伪彩色</strong>索引图象的颜色表中的每一个<strong>R、G、B分量值不一定相等</strong>。总共可以表示256个颜色，整体呈现为彩色，但是不够细腻。</p>
</blockquote>
</li>
<li><p><strong>24位真彩色图像</strong></p>
<ul>
<li>每一个像素由R、G、B三个分量组成。</li>
<li>每个分量各占8位，取值都为0~255，每一个像素有24位。（相比于上述8位索引图象，不带颜色表）</li>
</ul>
<blockquote>
<p>总共可以表示 256 * 256 * 256 个颜色。颜色表达更加细腻。</p>
</blockquote>
</li>
<li><p><strong>图像显示流程图</strong></p>
<p><img src="/2020/12/26/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86-1/%E5%9B%BE%E5%83%8F%E6%98%BE%E7%A4%BA%E6%B5%81%E7%A8%8B%E5%9B%BE.png"></p>
</li>
<li><p><strong>图像文件格式</strong></p>
</li>
</ol>
]]></content>
      <categories>
        <category>图像处理课程</category>
      </categories>
      <tags>
        <tag>课程</tag>
      </tags>
  </entry>
  <entry>
    <title>第一篇博客</title>
    <url>/2020/12/25/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h3 id="使图片正常显示"><a href="#使图片正常显示" class="headerlink" title="使图片正常显示"></a>使图片正常显示</h3><p>使用 <strong>! [] (在这里输入图片在同名文件夹下的名字即可)</strong></p>
<p>注意上述的 <strong>!</strong> 和 <strong>[]</strong> 和 <strong>()</strong> 是相连的，中间没有空格，且显示的时候在 Typora 中可能无法正常显示，但是在网页中是可以正常显示的。 </p>
<hr>
<h3 id="常用的hexo命令"><a href="#常用的hexo命令" class="headerlink" title="常用的hexo命令"></a>常用的hexo命令</h3><a id="more"></a>

<p><code>hexo new page categories</code> 会创建一个新的分类</p>
<p><code>hexo new page tags</code> 会创建一个新的标签</p>
<p><code>hexo new &quot;文章名称&quot;</code> 会创建一个新 md 文件（附带一个文件夹用来存放资源）</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
</search>
